!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/platform-browser")):"function"==typeof define&&define.amd?define("ja-typeahead",["exports","@angular/core","@angular/forms","@angular/platform-browser"],t):t((e=e||self)["ja-typeahead"]={},e.ng.core,e.ng.forms,e.ng.platformBrowser)}(this,(function(e,t,i,n){"use strict";var a=function(){function e(){}return e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),o=function(){function e(){this.fetchData=new t.EventEmitter,this.onSelectItem=new t.EventEmitter,this.checkboxArray=[],this.selectedIds=[]}return e.prototype.ngOnInit=function(){this.jsonData=this.data,console.log(this.data);var e={};this.data.forEach((function(t){console.log(t),e[t.username]=new i.FormControl("")})),this.form=new i.FormGroup(e)},e.prototype.inputClicked=function(e){this.fetchData.emit(e),this.config.defaultShow=!0},e.prototype.filterTypeahead=function(e){var t=this;this.jsonData=this.data;var i=this.jsonData.filter((function(i){return-1!==i[t.config.displayLabel].toLowerCase().indexOf(e.target.value.toLowerCase())}));this.jsonData=i},e.prototype.itemClicked=function(e,t,i){console.log(this.config.multiSelect),!0===e.target.checked&&(this.selectedIds.push({id:t,itm:i,checked:e.target.checked}),console.log("Selected Ids ",this.selectedIds)),!1===e.target.checked&&(this.selectedIds=this.selectedIds.filter((function(e){return e.id!==t}))),!0===this.config.multiSelect?this.onSelectItem.emit(this.selectedIds):this.onSelectItem.emit(this.selectedIds[this.selectedIds.length-1])},e.prototype.getCheckState=function(e,t){},e.prototype.checkboxClicked=function(e,t,i){t="u"===t?"c":"u",this.getCheckState(t,i)},e.decorators=[{type:t.Component,args:[{selector:"lib-ja-typeahead",template:'<div class="multi-typeahead">\n    <div class="input-wrapper">\n        <div class="selected-list" *ngIf="config.multiSelect === false">\n            <span class="chip" *ngIf="selectedIds.length > 0">\n                {{selectedIds[selectedIds.length - 1].itm[config.displayLabel]}}\n            </span>\n        </div>\n        <div class="selected-list" *ngIf="config.multiSelect === true">\n            <span *ngIf="selectedIds.length <= 2">\n                <span *ngFor="let item of selectedIds; let i = index"\n                    class="chip">{{item.itm[config.displayLabel]}}</span>\n            </span>\n            <span *ngIf="selectedIds.length > 2" class="chip">\n                {{selectedIds.length}}+ items selected\n            </span>\n        </div>\n        <input class="search-input" type="text" (click)="inputClicked($event)" (keyup)="filterTypeahead($event)" />\n        <i class="fas" [ngClass]="config.defaultShow === false ? \'fa-angle-down\' : \'fa-angle-up\'"\n            (click)="config.defaultShow = !config.defaultShow"></i>\n    </div>\n    <div class="search-result" [hidden]="config.defaultShow === false">\n        <ul>\n            <li *ngFor="let item of jsonData; let i = index">\n                <label class="container">{{item[config.displayLabel]}}\n                    <input [type]="config.multiSelect === true ? \'checkbox\' : \'radio\'"\n                        [name]="config.multiSelect === true ? \'item-\'+item.name : \'th_radio\'" #myItem\n                        (change)="itemClicked($event, item.id, item)">\n                    <span class="checkmark" [ngClass]="config.multiSelect === true ? \'\' : \'th-radio\'"></span>\n                </label>\n\n            </li>\n        </ul>\n    </div>\n</div>\n\n<div class="overlay" (click)="config.defaultShow = false"></div>',styles:['.multi-typeahead{font-family:Roboto-Light;margin-top:20px;z-index:1;position:absolute}.multi-typeahead .input-wrapper .selected-list{width:300px;border:2px dotted #00f}.multi-typeahead .input-wrapper .selected-list .chip{display:inline-block;margin:2px 2px 2px 4px;border:1px solid #122ce0;color:#122ce0;padding:2px 10px;position:relative}.multi-typeahead .input-wrapper .selected-list .no-border{border:none!important}.multi-typeahead .input-wrapper .search-input{width:300px;border:1px solid silver;height:2rem;font-size:1.4rem;font-weight:300;padding-left:4px;outline:0}.multi-typeahead .input-wrapper i{z-index:1;font-size:2rem;margin-left:-26px;margin-top:0;cursor:pointer}.multi-typeahead .search-result{width:305px;border:1px solid silver}.multi-typeahead ul{margin:4px auto;padding:10px}.multi-typeahead ul li{list-style:none}.multi-typeahead .container{display:block;position:relative;padding-left:35px;margin-bottom:12px;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:Roboto-Light;font-size:1.2rem}.multi-typeahead .container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.multi-typeahead .checkmark{position:absolute;top:0;left:0;height:25px;width:25px;background-color:#eee}.multi-typeahead .container:hover input~.checkmark{background-color:#ccc}.multi-typeahead .container input:checked~.checkmark{background-color:#2196f3}.multi-typeahead .checkmark:after{content:"";position:absolute;display:none}.multi-typeahead .container input:checked~.checkmark:after{display:block}.multi-typeahead .container .checkmark:after{left:9px;top:5px;width:5px;height:10px;border:solid #fff;border-width:0 3px 3px 0;transform:rotate(45deg)}.multi-typeahead .th-radio{border:2px solid #000;border-radius:100%}.overlay{position:fixed;background-color:rgba(0,0,0,0);top:0;left:0;width:100%;height:100%;z-index:0}']}]}],e.ctorParameters=function(){return[]},e.propDecorators={data:[{type:t.Input}],config:[{type:t.Input}],fetchData:[{type:t.Output}],onSelectItem:[{type:t.Output}],item:[{type:t.ViewChildren,args:["myItem"]}]},e}();var r=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[o],imports:[n.BrowserModule],exports:[o]}]}],e}();e.JaTypeaheadComponent=o,e.JaTypeaheadModule=r,e.JaTypeaheadService=a,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ja-typeahead.umd.min.js.map